<<<<<<< HEAD
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
server <- function(input, output) {
source("data_wrangling.R")
source("data_processing.R")
# Server stuff
output$plot1a <- renderPlot({
plot1a <- ggplot(data = income_by_le) +
geom_point(mapping = aes(x = Avg.Life.Expectancy.Years, y = median_income,  color = Race)) +
labs(title = "Relationship Between Average Life Expectancy and Median Income",
x = "Average Life Expectancy",
y = "Median Income")
plot1a
})
output$plot1b <- renderPlot({
plot1b <- ggplot(data = income_by_le) +
geom_point(mapping = aes(x = Year, y = median_income,  color = Race)) +
labs(title = "Median Income Over Tiime",
x = "Year",
y = "Median Income")
plot1b
})
output$plot1c <- renderPlot({
plot1c <- ggplot(data = income_by_le) +
geom_point(mapping = aes(x = Year, y = Avg.Life.Expectancy.Years,  color = Race)) +
labs(title = "Average Life Expectancy Over Tiime",
x = "Year",
y = "Average Life Expectancy")
plot1c
})
output$plot2white <- renderPlotly({
plot2white <- ggplot(data = new_data) +
geom_polygon(aes(x = long, y = lat, group = group,
fill = cut(new_data$White, seq(65, 90, by = 2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot2white + geom_point()
ggplotly(plot2white, tooltip="region")
})
output$plot2afa <- renderPlotly({
plot2afa <- ggplot(data = new_data) +
geom_polygon(aes(x = long, y = lat, group = group,
fill = cut(new_data$African.American, seq(65, 90, by = 2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot2afa + geom_point()
ggplotly(plot2afa, tooltip="region")
})
output$plot2asa <- renderPlotly({
plot2asa <- ggplot(data = new_data) +
geom_polygon(aes(x = long, y = lat, group = group,
fill = cut(new_data$Asian.American, seq(65, 90, by = 2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot2asa + geom_point()
ggplotly(plot2asa, tooltip="region")
})
output$plot2na <- renderPlotly({
plot2na <- ggplot(data = new_data) +
geom_polygon(aes(x = long, y = lat, group = group, fill =
cut(new_data$Native.American, seq(65, 90, by = 2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot2na + geom_point()
ggplotly(plot2na, tooltip="region")
})
output$plot2lat <- renderPlotly({
plot2lat <- ggplot(data = new_data) +
geom_polygon(aes(x = long, y = lat, group = group, fill =
cut(new_data$Latino, seq(65, 90, by = 2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot2lat + geom_point()
ggplotly(plot2lat, tooltip="region")
})
# Question 3 Plots - Sebastian
output$plot3a <- renderPlot({
plot3a <- ggplot(data = pct_women_poor_health) +
geom_point(mapping = aes(x = Location, y = All.Women,
size = All.Women, color = Location)) +
labs(title = "Percent of Adult Women Reporting Fair or Poor Health Status by Race/Ethnicity",
x = "Location (State/Territory)",
y = "Percentage of Women Reporting Fair/Poor Health Status") +
theme(axis.text.x = element_blank())
plot3a
})
output$plot3b <- renderPlot({
plot3b <- ggplot(data = pct_men_poor_health) +
geom_point(mapping = aes(x = Location, y = All.Men,
size = All.Men, color = Location)) +
labs(title = "Percent of Adult Men Reporting Fair or Poor Health Status by Race/Ethnicity",
x = "Location (State/Territory)",
y = "Percentage of Men Reporting Fair/Poor Health Status") +
theme(axis.text.x = element_blank())
plot3b
})
output$plot3cw <- renderPlotly({
plot3cw <- ggplot(data = state_dist_uninsured_by_race) +
geom_polygon(aes(x = long, y = lat, group = group, fill =
cut(state_dist_uninsured_by_race$White, seq(0.1, 0.9, by = 0.2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot3cw + geom_point()
ggplotly(plot3cw, tooltip="region")
plot3cw
})
output$plot3cb <- renderPlotly({
plot3cb <- ggplot(data = state_dist_uninsured_by_race) +
geom_polygon(aes(x = long, y = lat, group = group, fill =
cut(state_dist_uninsured_by_race$Black, seq(0.1, 0.9, by = 0.2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot3cb + geom_point()
ggplotly(plot3cb, tooltip="region")
plot3cb
})
output$plot3ch <- renderPlotly({
plot3ch <- ggplot(data = state_dist_uninsured_by_race) +
geom_polygon(aes(x = long, y = lat, group = group, fill =
cut(state_dist_uninsured_by_race$Hispanic, seq(0.1, 0.9, by = 0.2), include.lowest = TRUE))) +
scale_fill_manual(values = c("#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"), na.value = "#636363")
plot3ch + geom_point()
ggplotly(plot3ch, tooltip="region")
plot3ch
})
}
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE)
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
# Combine income and le dataframes, get income_by_le
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
=======
as.data.frame(rivers)
View(rivers)
data("precip")
View(precip)
as.data.frame(precip)
View(precip)
View(Titanic)
is.data.frame(Titanic)
as.data.frame(Titanic)
filter(Titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
select("Freq")
is.data.frame(Titanic)
as.data.frame(Titanic)
is.data.frame(Titanic)
is.data.frame(Titanic)
as.data.frame(Titanic, stringsAsFactors = F)
is.data.frame(Titanic)
data(Titanic)
is.data.frame(Titanic)
as.data.frame(Titanic, stringsAsFactors = F)
is.data.frame(Titanic)
data(Titanic)
is.data.frame(Titanic)
titanic <- as.data.frame(Titanic, stringsAsFactors = F)
is.data.frame(Titanic)
data(Titanic)
is.data.frame(Titanic)
titanic <- as.data.frame(Titanic, stringsAsFactors = F)
is.data.frame(titanic)
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
select("Freq")
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
select("Freq")
num_adult_men_survivor
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
sum(select("Freq"))
num_adult_men_survivor
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
select(max("Freq")
num_adult_men_survivor
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
select(max("Freq"))
num_adult_men_survivor
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
filter(Freq == max(Freq)) %>%
select("Freq")
num_adult_men_survivor
num_adult_men_survivor <- filter(titanic, Age == "Adult") %>%
filter(Sex == "Male") %>%
filter(Survived == "Yes") %>%
filter(Freq == max(Freq)) %>%
select(c("Class", "Freq"))
num_adult_men_survivor
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
select(vechicles, make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
is.data.frame((vechicles))
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
is.data.frame(vehicles)
select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(makes)
makes <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(makes)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
sum(unique(makes))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
nrows(unique(makes))
make <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(make)
# Filter the data set for vehicles manufactured in 1997
filter(vehicles, year == 1997)
vehicles <- is.data.frame(vehicles)
make <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(make)
# Filter the data set for vehicles manufactured in 1997
filter(vehicles, year == 1997)
# Filter the data set for vehicles manufactured in 1997
filter(vehicles, year == 1997)
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
make <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(make)
# Filter the data set for vehicles manufactured in 1997
filter(vehicles, year == 1997)
make <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(make)
# Filter the data set for vehicles manufactured in 1997
filter(vehicles, year == 1997)
arrange(year_1997,hwy)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles, year == 1997)
arrange(year_1997,hwy)
mutate(year_1997, average = (cty + hwy) / 2)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
filter(vehicles, drive == "2-Wheel Drive", cty > 20)
colnames(vehicles)
worst_vehicle <- filter(two_wheel_good_milage, cty == min(cty)) %>%
select(ID)
worst_vehicle
worst_vehicle <- filter(two_wheel_good_milage, cty == min(cty)) %>%
select(id)
worst_vehicle
View(vehicles)
filter(two_wheel_good_milage, cty == min(cty))
filter(vehicles, drive == "2-Wheel Drive", cty > 20)
worst_vehicle <- filter(two_wheel_good_milage, cty == min(cty)) %>%
select(id)
worst_vehicle
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
two_wheel_good_milage <- filter(vehicles, drive == "2-Wheel Drive", cty > 20)
worst_vehicle <- filter(two_wheel_good_milage, cty == min(cty)) %>%
select(id)
worst_vehicle
worst_vehicle <- filter(two_wheel_good_milage, cty == min(cty)) %>%
#select(id)
worst_vehicle
filter(two_wheel_good_milage, cty == min(cty))
worst_vehicle <- filter(two_wheel_good_milage, hwy == min(hwy)) %>%
#select(id)
worst_vehicle
# Of the above vehicles, what is the vehicle ID of the vehicle with the worst
# hwy mpg?
# Hint: filter for the worst vehicle, then select its ID.
worst_vehicle <- filter(two_wheel_good_milage, hwy == min(hwy)) %>%
#select(id)
worst_vehicle
filter(two_wheel_good_milage, hwy == min(hwy))
worst_vehicle <- filter(two_wheel_good_milage, hwy == min(hwy)) %>%
select(id)
worst_vehicle
# Use the `distinct()` function to determine how many different car manufacturers
# are represented by the data set
unique(make)
tally(make)
make <- select(vehicles, make)
tally(make)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
make <- select(vehicles, make)
tally(make)
# Install and load the "dplyr" library
vehicles_df <- data("vehicles")
# Install and load the "dplyr" library
vehicles_df <- data(vehicles)
View(vehicles)
vehicles_df <- as.data.frame(vehicles)
View(vehicles_df)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles_df, year == 1997)
vehicles_df <- as.data.frame(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
make <- select(vehicles, make)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles_df, year == 1997)
View(year_1997)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles_df, 'year' == 1997)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles_df, year == 1997)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles, year == 1997)
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(vehicles, year == 1997)
Vehicles <- data("vehicles")
# Filter the data set for vehicles manufactured in 1997
year_1997 <- filter(Vehicles, year == 1997)
data("mtcars")
is.data.frame(mtcars)
mtcars <- data("mtcars")
#Which 4-cyl car gets the best milage per gallon
View(mtcars)
mtcars <- as.data.frame(mtcars)
#Which 4-cyl car gets the best milage per gallon
View(mtcars)
data("mtcars")
#Which 4-cyl car gets the best milage per gallon
View(mtcars)
mtcars_named <- mutate(mtcars, car_name == row.names(mtcars))
#Which 4-cyl car gets the best milage per gallon
View(mtcars)
mtcars_named <- mutate(mtcars, car_name == row.names(mtcars))
View(mtcars)
mtcars_named <- mutate(mtcars, car_name == row.names(mtcars))
View(mtcars_named)
mtcars_named <- mutate(mtcars, car_name == row.names(mtcars))
data("mtcars")
mtcars_named <- mutate(mtcars, car_name == row.names(mtcars))
View(mtcars_named)
mtcars_named <- mutate(mtcars, car_name = row.names(mtcars))
View(mtcars_named)
best_four_cyl_car <- filter(mtcars_named, cyl == 4) %>%
filter(mpg == max(mpg)) %>%
select(car_name)
best_four_cyl_car
mtcars_named <- mutate(mtcars, car_name = row.names(mtcars))
View(mtcars_named)
best_four_cyl_car <- filter(mtcars_named, cyl == 4) %>%
filter(mpg == max(mpg)) %>%
select(car_name)
best_four_cyl_car
install.packages("shiny")
library("shiny")
library(shiny)
runApp('Desktop/shiny_app')
setwd("~/Desktop/infoaa2final")
shiny::runApp()
runApp()
runApp()
runApp()
#filtering for all state data in year 1987
le_state_1987 <- le_state %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.) %>%
filter(Year == 1987) %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.)
library(dplyr)
library(highcharter)
library(plotly)
library(ggplot2)
library(magrittr)
#reading in data from IHME US State Life Expectancy csv File
life_expectancy <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009_lowercase_Q4.csv", stringsAsFactors = FALSE)
le_state <- as.data.frame(life_expectancy)
#filtering the data frame to contain only state, year, male LE, female LE, and the change in LE for
#both sexes between 1987-2009
le_state <- le_state %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.,
Male.life.expectancy.change.1987.to.2009..years., Female.life.expectancy.change.1987.to.2009..years.)
#filtering for all state data in year 1987
le_state_1987 <- le_state %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.) %>%
filter(Year == 1987) %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.)
#adding another column that contains the average LE
le_state_1987 <- mutate(le_state_1987, avg.life.expectancy = (Male.life.expectancy..years. +
Female.life.expectancy..years.) / 2)
#map shows LE for each state in year 1987
hcmap("countries/us/us-all", data = le_state_1987, value = "avg.life.expectancy",
joinBy = c("name", "State"), name = "Life Expectancy (in years)",
dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 2, valueSuffix = " years"))
#filtering for all state data in year 2009
le_state_2009 <- le_state %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.) %>%
filter(Year == 2009) %>%
select(State, Year, Male.life.expectancy..years., Female.life.expectancy..years.)
#adding another column that contains the average LE
le_state_2009 <- mutate(le_state_2009, avg.life.expectancy = (Male.life.expectancy..years. +
Female.life.expectancy..years.) / 2)
#map shows LE for each state in year 2009
hcmap("countries/us/us-all", data = le_state_2009, value = "avg.life.expectancy",
joinBy = c("name", "State"), name = "Life Expectancy (in years)",
dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 2, valueSuffix = " years"))
#dataframe contains the trend between 1987-2009
trend <- le_state %>%
select(State, Male.life.expectancy.change.1987.to.2009..years., Female.life.expectancy.change.1987.to.2009..years.)
trend <- mutate(trend, avg.life.expectancy = (Male.life.expectancy.change.1987.to.2009..years. +
Female.life.expectancy.change.1987.to.2009..years.) / 2)
trend <- trend %>% select(State, avg.life.expectancy)
trend <- unique(trend)
#plotting data that shows the trend of life expectancy for each state from 1987 to 2009
set.seed(955)
trend_plot <- ggplot(trend, aes(x = State, y = avg.life.expectancy, color = State)) +
geom_point(shape = 11) + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
trend_plot <- ggplotly(trend_plot) + labs(
title = "Life Expectancy Change From 1987 to 2009",
x = "States",
y = "Change in Life Expectancy")
trend_plot
trend_plot
#map shows LE for each state in year 1987
hcmap("countries/us/us-all", data = le_state_1987, value = "avg.life.expectancy",
joinBy = c("name", "State"), name = "Life Expectancy (in years)",
dataLabels = list(enabled = TRUE, format = "{point.name}"),
borderColor = "#FAFAFA", borderWidth = 0.1,
tooltip = list(valueDecimals = 2, valueSuffix = " years"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste(round(100*correlation_income_le_race, 2), "%", sep="")
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> race_by_le
income_by_race <- read_xlsx("data/income_by_race.xlsx")
le_national <- read_xlsx("data/life_expectancy_death_rates.xlsx")
pct_insurance_by_race <- read_xlsx("data/pct_insurance_by_race.xlsx")
le_by_state <- read.csv("data/IHME_US_STATE_LIFE_EXPECTANCY_1987_2009.csv", stringsAsFactors = FALSE)
le_by_income_state <- read.csv("data/health_ineq_online_table_5.csv", stringsAsFactors = FALSE)
le_at_birth_race <- read.csv("data/le_at_birth_race.csv", stringsAsFactors = FALSE, na.strings = "NSD")
income_by_race <- as.data.frame(income_by_race)
le_national <- as.data.frame(le_national)
pct_insurance_by_race <- as.data.frame(pct_insurance_by_race)
##################
### Question 1 ###
##################
# Combine income and le dataframes
income_black_white <- income_by_race %>%
filter(Race %in% c("All Races", "White Alone", "Black Alone")) %>%
select(Year, Race, median)
le_black_white <- le_national %>%
filter(Sex == "Both Sexes") %>%
select(-Age.Adusted.Death.Rate)
income_black_white_wide_median <- spread(income_black_white,
key = "Race",
value = "median" )
colnames(income_black_white_wide_median) <- c("Year", "All Races", "Black", "White")
income_black_white <- gather(income_black_white_wide_median,
key = "Race",
value = "median_income", "All Races", "Black", "White")
income_by_le <- left_join(income_black_white, le_black_white, by = c("Year", "Race"))
income_by_le <- income_by_le %>%
select(-Sex)
years <- unique(income_by_le$Year)
# Get correlation
avg_median_income_black <- sum(income_black_white_wide_median$Black) / nrow(income_black_white_wide_median)
avg_median_income_white <- sum(income_black_white_wide_median$White) / nrow(income_black_white_wide_median)
avg_median_income_all <- sum(income_black_white_wide_median$`All Races`) / nrow(income_black_white_wide_median)
le_black <- income_by_le %>%
filter(Race == "Black") %>%
select(Avg.Life.Expectancy.Years)
avg_le_black <- sum(le_black, na.rm = TRUE) / (nrow(le_black) - 2)
le_white <- income_by_le %>%
filter(Race == "White") %>%
select(Avg.Life.Expectancy.Years)
avg_le_white <- sum(le_white, na.rm = TRUE) / (nrow(le_white) - 2)
le_all <- income_by_le %>%
filter(Race == "All Races") %>%
select(Avg.Life.Expectancy.Years)
avg_le_all <- sum(le_all, na.rm = TRUE) / (nrow(le_all) - 2)
average_medians <- c(avg_median_income_black, avg_median_income_white, avg_median_income_all)
average_les <- c(avg_le_black, avg_le_white, avg_le_all)
correlation_income_le_race <- cor(average_medians, average_les) #0.9985999
correlation_income_le_race <- paste(round(100*correlation_income_le_race, 2), "%", sep="")
##################
### Question 2 ###
##################
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race_renamed <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race_renamed)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
change <- new_data %>%
mutate(cut(new_data$African.American, breaks = 4))
# plot 2b
le_at_birth_race_long <- le_at_birth_race %>%
filter(Location != "United States") %>%
gather(key = "Race",
value = "Life_Expectancy", "White", "African.American", "Latino", "Asian.American",
"Native.American")
locations <- unique(le_at_birth_race_long$region)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
locations <- unique(le_at_birth_race_long$region)
locations
locations <- unique(le_at_birth_race_long$Location)
locations
runApp()
runApp()
runApp()
income_by_le
<<<<<<< HEAD
#find life expectancy per state for African Americans
le_at_birth_race <- le_at_birth_race %>%
mutate(Location = tolower(Location))
le_at_birth_race <- rename(le_at_birth_race, region = Location)
state_data <- map_data('state')
new_data <- left_join(state_data, le_at_birth_race)
new_data$African.American[new_data$African.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$African.American <- as.numeric(new_data$African.American)
new_data$Asian.American[new_data$Asian.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Asian.American <- as.numeric(new_data$Asian.American)
new_data$Latino[new_data$Latino %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Latino <- as.numeric(new_data$Latino)
new_data$Native.American[new_data$Native.American %in% "NSD"] <- "0"
new_data[new_data == 0] <- NA
new_data$Native.American <- as.numeric(new_data$Native.American)
#le_by_state source
#http://ghdx.healthdata.org/record/united-states-adult-life-expectancy-state-and-county-1987-2009#
#le_by_income_state
#https://healthinequality.org/data/ table 5#
shiny::runApp('school/info-201/infoaa2final')
setwd("~/school/info-201/infoaa2final")
shiny::runApp()
=======
le_at_birth_race_renamed
income_by_race
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# plot 2b
le_at_birth_race_long <- le_at_birth_race %>%
filter(Location != "United States") %>%
gather(key = "Race",
value = "Life_Expectancy", "White", "African.American", "Latino", "Asian.American",
"Native.American")
runApp()
runApp()
runApp()
View(new_data)
View(le_by_state)
runApp()
runApp()
View(le_at_birth_race)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
styler:::style_active_file()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(new_data)
head(le_at_birth_race)
colnames(state_data)
colnames(income_by_le)
runApp()
runApp()
runApp()
colnames(income_by_le)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> race_by_le
